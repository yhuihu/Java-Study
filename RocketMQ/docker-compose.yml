version: "3.5"
services:
  #nacos注册中心
  nacos:
    image: nacos/nacos-server:latest
    container_name: nacos-standalone
    environment:
      - PREFER_HOST_MODE=hostname
      - MODE=standalone
    volumes:
      - ./nacos-docker/standalone-logs/:/home/nacos/logs
      - ./nacos-docker/init.d/custom.properties:/home/nacos/init.d/custom.properties
    ports:
      - "8848:8848"
    restart: always
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ./nacos-docker/prometheus/prometheus-standalone.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - nacos
    restart: always
  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    ports:
      - 3000:3000
    restart: always
  #数据库
  mysql:
    container_name: mysql-docker
    image: mysql
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      TZ: "Asia/Shanghai"
    volumes:
      - ./data/mysql:/var/lib/mysql
      - ./mysql/my.cnf:/etc/my.cnf

  #Redis集群
  node1:
    image: redis
    container_name: redis-node1
    restart: always
    network_mode: "host"
    ports:
      - 7001:7001
      - 17001:17001
    volumes:
      - /root/shop/data/redis/node1:/data
      - /root/shop/redis/node1:/usr/local/etc/redis
    command:
      redis-server /usr/local/etc/redis/redis.conf

  node2:
    image: redis
    container_name: redis-node2
    restart: always
    network_mode: "host"
    ports:
      - 7002:7002
      - 17002:17002
    volumes:
      - /root/shop/data/redis/node2:/data
      - /root/shop/redis/node2:/usr/local/etc/redis
    command:
      redis-server /usr/local/etc/redis/redis.conf
  node3:
    image: redis
    container_name: redis-node3
    restart: always
    network_mode: "host"
    ports:
      - 7003:7003
      - 17003:17003
    volumes:
      - /root/shop/data/redis/node3:/data
      - /root/shop/redis/node3:/usr/local/etc/redis
    command:
      redis-server /usr/local/etc/redis/redis.conf

  node4:
    image: redis
    container_name: redis-node4
    restart: always
    network_mode: "host"
    ports:
      - 7004:7004
      - 17004:17004
    volumes:
      - /root/shop/data/redis/node4:/data
      - /root/shop/redis/node4:/usr/local/etc/redis
    command:
      redis-server /usr/local/etc/redis/redis.conf

  node5:
    image: redis
    container_name: redis-node5
    restart: always
    network_mode: "host"
    ports:
      - 7005:7005
      - 17005:17005
    volumes:
      - /root/shop/data/redis/node5:/data
      - /root/shop/redis/node5:/usr/local/etc/redis
    command:
      redis-server /usr/local/etc/redis/redis.conf

  node6:
    image: redis
    container_name: redis-node6
    restart: always
    network_mode: "host"
    ports:
      - 7006:7006
      - 17006:17006
    volumes:
      - /root/shop/data/redis/node6:/data
      - /root/shop/redis/node6:/usr/local/etc/redis
    command:
      redis-server /usr/local/etc/redis/redis.conf

  #RocketMQ
  rmqnamesrv:
    image: foxiswho/rocketmq:server-4.5.2
    container_name: rmqnamesrv
    ports:
      - 9876:9876
    volumes:
      - ./data/rocketmq/namesrv/logs:/opt/logs
      - ./data/rocketmq/namesrv/store:/opt/store
    environment:
      JAVA_OPT_EXT: "-Duser.home=/opt -Xms128m -Xmx128m -Xmn128m"
    restart: always
    networks:
      rmq:
        aliases:
          - rmqnamesrv
  rmqbroker:
    image: foxiswho/rocketmq:broker-4.5.2
    container_name: rmqbroker
    ports:
      - 10909:10909
      - 10911:10911
    volumes:
      - ./data/rocketmq/broker/logs:/opt/logs
      - ./data/rocketmq/broker/store:/opt/store
      - ./rocketmq/broker.conf:/etc/rocketmq/broker.conf
    environment:
      NAMESRV_ADDR: "rmqnamesrv:9876"
      JAVA_OPTS: " -Duser.home=/opt"
      JAVA_OPT_EXT: "-server -Xms128m -Xmx128m -Xmn128m"
    command: mqbroker -c /etc/rocketmq/broker.conf
    restart: always
    depends_on:
      - rmqnamesrv
    networks:
      rmq:
        aliases:
          - rmqbroker

  rmqconsole:
    image: styletang/rocketmq-console-ng
    container_name: rmqconsole
    ports:
      - 8180:8080
    environment:
      JAVA_OPTS: "-Drocketmq.namesrv.addr=rmqnamesrv:9876 -Dcom.rocketmq.sendMessageWithVIPChannel=false"
    depends_on:
      - rmqnamesrv
    networks:
      rmq:
        aliases:
          - rmqconsole

networks:
  rmq:
    name: rmq
    driver: bridge
